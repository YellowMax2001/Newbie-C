PHONY :=
__build :

obj-y :=
obj-dir :=
obj-shared :=
obj-static :=
MAXBUILD_BIN :=
MAXBUILD_SHARED :=
MAXBUILD_STATIC :=
MAXBUILD_FLAG :=
INCLUDE_FLAG :=

#use '-' to hid error if the include file not exist
-include Makefile
-include makefile

include_dir = $(addprefix -I,$(INCLUDE_FLAG))

#>>>
#get objects
cur_subdirs := $(filter %/,$(obj-y) $(obj-dir))
cur_objs := $(filter-out %/,$(obj-y))
#maybe multipule target bin exist in one table of contents
#so we do not link MAXBUILD_BIN into built-in.o, or the <main>
#functions will be conflict
cur_objs := $(filter-out $(addsuffix .o,$(MAXBUILD_BIN)),$(patsubst %.c,%.o,$(cur_objs)))
subdir_objs := $(foreach subdir,$(cur_subdirs),$(subdir)built-in.o)
#<<<

#>>>
#there has no <main> function in static&shared library object files,
#so we need not remove MAXBUILD_SHARED like MAXBUILD_BIN
cur_shared_subdirs := $(filter %/,$(obj-shared))
cur_shared_objs := $(filter-out %/,$(obj-shared))
cur_shared_objs := $(patsubst %.c,%.o,$(cur_shared_objs))
shared_subdir_objs :=\
	$(foreach subdir,$(cur_shared_subdirs),$(subdir)built-shared-in.o)

cur_static_subdirs := $(filter %/,$(obj-static))
cur_static_objs := $(filter-out %/,$(obj-static))
cur_static_objs := $(patsubst %.c,%.o,$(cur_static_objs))
static_subdir_objs :=\
	$(foreach subdir,$(cur_static_subdirs),$(subdir)built-static-in.o)
#<<<

#add shared and static objs and remove duplicate words
cur_objs += $(cur_shared_objs) $(cur_static_objs)
cur_objs := $(sort $(cur_objs))

cur_depfiles := $(shell find -maxdepth 1 -name "\.*\.d")
cur_depfiles := $(subst ./,,$(cur_depfiles))

#just include the dependence files
ifneq ($(cur_depfiles),)
-include $(cur_depfiles)
endif

PHONY += $(cur_subdirs) built-in.o

#>>>
#main object
ifneq ($(MAXBUILD_BIN),)
PHONY += $(MAXBUILD_BIN)
$(MAXBUILD_BIN) : built-in.o $(addsuffix .o,$(MAXBUILD_BIN))
	@ echo CC $(addsuffix .c,$@)
	@ $(CC) -c -o $(addsuffix .o,$@) $(addsuffix .c,$@) \
$(COMPILE_FLAG) $(SYS_INC) $(include_dir)
	@ echo LD $@-built-in.o
	@ $(LD) -r -o $@-built-in.o $(addsuffix .o,$@) \
$(patsubst %.c,%.o,$(cur_objs)) $(subdir_objs)
	@ $(CC) $(MAXBUILD_FLAG) -o $@ $(shell pwd)/$@-built-in.o $(LINK_FLAG)
endif
#<<<

ifeq ($(MAXBUILD_STATIC),$(MAXBUILD_SHARED))
ifneq ($(MAXBUILD_STATIC),)
MAXBUILD_STATIC := $(MAXBUILD_STATIC)_static
MAXBUILD_SHARED := $(MAXBUILD_SHARED)_shared
endif
endif

#>>>
#static library
ifneq ($(cur_static_objs)$(static_subdir_objs),)
PHONY += built-static-in.o
built-static-in.o : $(patsubst %.c,%.o,$(cur_static_objs)) \
$(static_subdir_objs)
	@ echo LD $^
	@ $(LD) -r -o $@ $^
endif

ifneq ($(MAXBUILD_STATIC),)
PHONY += $(MAXBUILD_STATIC)

$(MAXBUILD_STATIC) : built-static-in.o
	@ echo AR $@
	@ $(AR) $(MAXBUILD_FLAG) -rsc lib$@.a $^
endif
#<<<

#>>>
#shared library
ifneq ($(cur_shared_objs)$(shared_subdir_objs),)
PHONY += built-shared-in.o
built-shared-in.o : $(patsubst %.c,%.o,$(cur_shared_objs)) \
$(shared_subdir_objs)
	@ echo LD $^
	@ $(LD) -r -o $@ $^
endif

ifneq ($(MAXBUILD_SHARED),)
PHONY += $(MAXBUILD_SHARED)

$(MAXBUILD_SHARED) : built-shared-in.o
	@ echo CC $@
	@ $(CC) $(MAXBUILD_FLAG) -shared -fPIC -o lib$@.so $^
endif
#<<<

#it will looks like
# __build : CurSubdirs built-in.o BUILD_BIN \
#built-shared-in.o BUILD_SHARED_BIN built-static-in.o BUILD_STATIC_BIN
__build : $(PHONY)

$(cur_subdirs) :
	@ make -C $@ -f $(TOP_DIR)/Makefile.build CLEAN_OBJ=$(CLEAN_OBJ) $(CLEAN_OBJ)

built-in.o : $(patsubst %.c,%.o,$(cur_objs)) $(subdir_objs)
	@ echo LD $^
	@ $(LD) -r -o $@ $^

%.o : %.c
	@ echo CC $<
	@ $(CC) -Wp,-MD,.$@.d -c -o $@ $< $(COMPILE_FLAG) $(SYS_INC) $(include_dir)

.PHONY : __build_bin $(cur_subdirs)

clean: $(cur_subdirs)
ifneq ($(MAXBUILD_BIN),)
	rm -f $(MAXBUILD_BIN)
else
	@ echo Nothing to do ...
endif

distclean: $(cur_subdirs)
ifneq ($(MAXBUILD_BIN),)
	rm -f $(MAXBUILD_BIN)
endif
ifneq ($(MAXBUILD_STATIC),)
	rm -f lib$(MAXBUILD_STATIC)*.a
endif
ifneq ($(MAXBUILD_SHARED),)
	rm -f lib$(MAXBUILD_SHARED)*.so
	rm -f lib$(MAXBUILD_SHARED)*.so.*
endif

ifeq ($(MAXBUILD_BIN) $(MAXBUILD_STATIC) $(MAXBUILD_SHARED),)
	@ echo Nothing to do ...
endif

